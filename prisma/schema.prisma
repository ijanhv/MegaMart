// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  role      Role?      @default(USER) // Possible values: 'user', 'vendor', 'admin'
  address   String?
  orders    Order[]
  cartItems CartItem[]
  Wishlist  Wishlist[]
  Review    Review[]
}

// Wishlist model
model Wishlist {
  id        Int        @id @default(autoincrement())
  updatedAt DateTime   @updatedAt
  userId    Int
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
}

// Order model 
model Order {
  id        Int        @id @default(autoincrement())
  updatedAt DateTime   @updatedAt
  total     Float
  userId    Int
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
}

// CartItem model
model CartItem {
  id         Int       @id @default(autoincrement())
  updatedAt  DateTime  @updatedAt
  quantity   Int
  productId  Int
  orderId    Int?
  order      Order?    @relation(fields: [orderId], references: [id])
  wishlistId Int?
  wishlist   Wishlist? @relation(fields: [wishlistId], references: [id])
  userId     Int
  user       User      @relation(fields: [userId], references: [id])
}

model Vendor {
  id       Int       @id @default(autoincrement())
  name     String
  email    String    @unique
  password String
  address  String?
  products Product[]
  role     Role      @default(VENDOR)
}

model Product {
  id            Int      @id @default(autoincrement())
  name          String
  description   String
  price         Float
  imageUrl      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  brand         String
  color         String?
  size          String?
  averageRating Float?
  isFeatured    Boolean  @default(false)
  category      String
  inventory     Int // Number of items in stock
  Vendor        Vendor?  @relation(fields: [vendorId], references: [id])
  vendorId      Int?
  Review        Review[]
}

// Reviews

model Review {
  id        Int      @id @default(autoincrement())
  updatedAt DateTime @updatedAt
  rating    Int
  text      String
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  VENDOR
  ADMIN
}
